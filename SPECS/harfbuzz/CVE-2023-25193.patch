diff -ruN --ignore-all-space a/src/hb-ot-layout-gsubgpos.hh b/src/hb-ot-layout-gsubgpos.hh
--- a/src/hb-ot-layout-gsubgpos.hh	2019-10-29 12:49:28
+++ b/src/hb-ot-layout-gsubgpos.hh	2023-02-26 19:39:20
@@ -399,7 +399,19 @@
		bool prev ()
    {
			assert (num_items > 0);
-     while (idx > num_items - 1)
+			/* The alternate condition below is faster at string boundaries,
+			 * but produces subpar "unsafe-to-concat" values. */
+			unsigned stop = num_items - 1;
+			if (c->buffer->flags & HB_BUFFER_FLAG_PRODUCE_UNSAFE_TO_CONCAT)
+				stop = 1 - 1;
+
+			/* When looking back, limit how far we search; this function is mostly
+			 * used for looking back for base glyphs when attaching marks. If we
+			 * don't limit, we can get O(n^2) behavior where n is the number of
+			 * consecutive marks. */
+			stop = (unsigned) hb_max ((int) stop, (int) idx - HB_MAX_CONTEXT_LENGTH);
+
+			while (idx > stop)
			{
				idx--;
				const hb_glyph_info_t &info = c->buffer->out_info[idx];
