From d42332182512e56ba68446f49c3e3711e04301a2 Mon Sep 17 00:00:00 2001
From: Szymon Drosdzol <szymon@doyensec.com>
Date: Sun, 12 Mar 2023 19:47:24 +0100
Subject: [PATCH 1/3] Added option "allowInsecureRedirect"

---
 deps/npm/node_modules/request/lib/redirect.js          |  6 +++++-
 1 file changed, 5 insertions(+), 1 deletions(-)

diff --git a/deps/npm/node_modules/request/lib/redirect.js b/deps/npm/node_modules/request/lib/redirect.js
index b9150e77c..770c7f41b 100644
--- a/deps/npm/node_modules/request/lib/redirect.js
+++ b/deps/npm/node_modules/request/lib/redirect.js
@@ -14,6 +14,7 @@ function Redirect (request) {
   this.redirects = []
   this.redirectsFollowed = 0
   this.removeRefererHeader = false
+  this.allowInsecureRedirect = false
 }
 
 Redirect.prototype.onRequest = function (options) {
@@ -40,6 +41,9 @@ Redirect.prototype.onRequest = function (options) {
   if (options.followOriginalHttpMethod !== undefined) {
     self.followOriginalHttpMethod = options.followOriginalHttpMethod
   }
+  if (options.allowInsecureRedirect !== undefined) {
+    self.allowInsecureRedirect = options.allowInsecureRedirect;
+  }
 }
 
 Redirect.prototype.redirectTo = function (response) {
@@ -108,7 +112,7 @@ Redirect.prototype.onResponse = function (response) {
   request.uri = url.parse(redirectTo)
 
   // handle the case where we change protocol from https to http or vice versa
-  if (request.uri.protocol !== uriPrev.protocol) {
+  if (request.uri.protocol !== uriPrev.protocol && self.allowInsecureRedirect) {
     delete request.agent
   }
 
From 9d69d750f39cc5ab6f3b011e17472bc28b14dc22 Mon Sep 17 00:00:00 2001
From: Szymon Drosdzol <szymon@doyensec.com>
Date: Sun, 12 Mar 2023 19:50:09 +0100
Subject: [PATCH 2/3] Documented allowInsecureRedirect in Readme

---
 README.md | 1 +
 1 file changed, 1 insertion(+)

diff --git a/README.md b/README.md
index 42290d5ce..dd432a768 100644
--- a/README.md
+++ b/README.md
@@ -809,6 +809,7 @@ The first argument can be either a `url` or an `options` object. The only requir
 - `followOriginalHttpMethod` - by default we redirect to HTTP method GET. you can enable this property to redirect to the original HTTP method (default: `false`)
 - `maxRedirects` - the maximum number of redirects to follow (default: `10`)
 - `removeRefererHeader` - removes the referer header when a redirect happens (default: `false`). **Note:** if true, referer header set in the initial request is preserved during redirect chain.
+- `allowInsecureRedirect` - allows cross-protocol redirects (HTTP to HTTPS and vice versa). **Warning:** may lead to bypassing anti SSRF filters 


From 8a15249d182e54a261b1539846f76d913a6904f4 Mon Sep 17 00:00:00 2001
From: SzymonDrosdzol <84710686+SzymonDrosdzol@users.noreply.github.com>
Date: Fri, 17 Mar 2023 10:09:46 +0100
Subject: [PATCH 3/3] Removed semicolon

Co-authored-by: legobeat <109787230+legobeat@users.noreply.github.com>
---
 deps/npm/node_modules/request/lib/redirect.js | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/deps/npm/node_modules/request/lib/redirect.js b/deps/npm/node_modules/request/lib/redirect.js
index 770c7f41b..2864f9f2a 100644
--- a/deps/npm/node_modules/request/lib/redirect.js
+++ b/deps/npm/node_modules/request/lib/redirect.js
@@ -42,7 +42,7 @@ Redirect.prototype.onRequest = function (options) {
     self.followOriginalHttpMethod = options.followOriginalHttpMethod
   }
   if (options.allowInsecureRedirect !== undefined) {
-    self.allowInsecureRedirect = options.allowInsecureRedirect;
+    self.allowInsecureRedirect = options.allowInsecureRedirect
   }
 }
 